/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.97.2
  Forc version: 0.66.5
  Fuel-Core version: 0.40.0
*/

import { ContractFactory, decompressBytecode } from "fuels";
import type { Provider, Account, DeployContractOptions } from "fuels";

import { Airdrop } from "./Airdrop";

const bytecode = decompressBytecode("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");

export class AirdropFactory extends ContractFactory<Airdrop> {

  static readonly bytecode = bytecode;

  constructor(accountOrProvider: Account | Provider) {
    super(
      bytecode,
      Airdrop.abi,
      accountOrProvider,
      Airdrop.storageSlots
    );
  }

  static deploy (
    wallet: Account,
    options: DeployContractOptions = {}
  ) {
    const factory = new AirdropFactory(wallet);
    return factory.deploy(options);
  }
}
